# coding: utf-8

"""
    Box Platform API

    [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.

    The version of the OpenAPI document: 2.0.0
    Contact: devrel@box.com
    Created by: https://box.dev
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from box_python_sdk import schemas  # noqa: F401


class WebhooksUpdateWebhookRequestTriggers(
    schemas.ListSchema
):
    """NOTE:
    This class is auto generated by Konfig (https://konfigthis.com)

    An array of event names that this webhook is
to be triggered for
    """


    class MetaOapg:
        
        
        class items(
            schemas.EnumBase,
            schemas.StrSchema
        ):
            
            @schemas.classproperty
            def FILE_UPLOADED(cls):
                return cls("FILE.UPLOADED")
            
            @schemas.classproperty
            def FILE_PREVIEWED(cls):
                return cls("FILE.PREVIEWED")
            
            @schemas.classproperty
            def FILE_DOWNLOADED(cls):
                return cls("FILE.DOWNLOADED")
            
            @schemas.classproperty
            def FILE_TRASHED(cls):
                return cls("FILE.TRASHED")
            
            @schemas.classproperty
            def FILE_DELETED(cls):
                return cls("FILE.DELETED")
            
            @schemas.classproperty
            def FILE_RESTORED(cls):
                return cls("FILE.RESTORED")
            
            @schemas.classproperty
            def FILE_COPIED(cls):
                return cls("FILE.COPIED")
            
            @schemas.classproperty
            def FILE_MOVED(cls):
                return cls("FILE.MOVED")
            
            @schemas.classproperty
            def FILE_LOCKED(cls):
                return cls("FILE.LOCKED")
            
            @schemas.classproperty
            def FILE_UNLOCKED(cls):
                return cls("FILE.UNLOCKED")
            
            @schemas.classproperty
            def FILE_RENAMED(cls):
                return cls("FILE.RENAMED")
            
            @schemas.classproperty
            def COMMENT_CREATED(cls):
                return cls("COMMENT.CREATED")
            
            @schemas.classproperty
            def COMMENT_UPDATED(cls):
                return cls("COMMENT.UPDATED")
            
            @schemas.classproperty
            def COMMENT_DELETED(cls):
                return cls("COMMENT.DELETED")
            
            @schemas.classproperty
            def TASK_ASSIGNMENT_CREATED(cls):
                return cls("TASK_ASSIGNMENT.CREATED")
            
            @schemas.classproperty
            def TASK_ASSIGNMENT_UPDATED(cls):
                return cls("TASK_ASSIGNMENT.UPDATED")
            
            @schemas.classproperty
            def METADATA_INSTANCE_CREATED(cls):
                return cls("METADATA_INSTANCE.CREATED")
            
            @schemas.classproperty
            def METADATA_INSTANCE_UPDATED(cls):
                return cls("METADATA_INSTANCE.UPDATED")
            
            @schemas.classproperty
            def METADATA_INSTANCE_DELETED(cls):
                return cls("METADATA_INSTANCE.DELETED")
            
            @schemas.classproperty
            def FOLDER_CREATED(cls):
                return cls("FOLDER.CREATED")
            
            @schemas.classproperty
            def FOLDER_RENAMED(cls):
                return cls("FOLDER.RENAMED")
            
            @schemas.classproperty
            def FOLDER_DOWNLOADED(cls):
                return cls("FOLDER.DOWNLOADED")
            
            @schemas.classproperty
            def FOLDER_RESTORED(cls):
                return cls("FOLDER.RESTORED")
            
            @schemas.classproperty
            def FOLDER_DELETED(cls):
                return cls("FOLDER.DELETED")
            
            @schemas.classproperty
            def FOLDER_COPIED(cls):
                return cls("FOLDER.COPIED")
            
            @schemas.classproperty
            def FOLDER_MOVED(cls):
                return cls("FOLDER.MOVED")
            
            @schemas.classproperty
            def FOLDER_TRASHED(cls):
                return cls("FOLDER.TRASHED")
            
            @schemas.classproperty
            def WEBHOOK_DELETED(cls):
                return cls("WEBHOOK.DELETED")
            
            @schemas.classproperty
            def COLLABORATION_CREATED(cls):
                return cls("COLLABORATION.CREATED")
            
            @schemas.classproperty
            def COLLABORATION_ACCEPTED(cls):
                return cls("COLLABORATION.ACCEPTED")
            
            @schemas.classproperty
            def COLLABORATION_REJECTED(cls):
                return cls("COLLABORATION.REJECTED")
            
            @schemas.classproperty
            def COLLABORATION_REMOVED(cls):
                return cls("COLLABORATION.REMOVED")
            
            @schemas.classproperty
            def COLLABORATION_UPDATED(cls):
                return cls("COLLABORATION.UPDATED")
            
            @schemas.classproperty
            def SHARED_LINK_DELETED(cls):
                return cls("SHARED_LINK.DELETED")
            
            @schemas.classproperty
            def SHARED_LINK_CREATED(cls):
                return cls("SHARED_LINK.CREATED")
            
            @schemas.classproperty
            def SHARED_LINK_UPDATED(cls):
                return cls("SHARED_LINK.UPDATED")
            
            @schemas.classproperty
            def SIGN_REQUEST_COMPLETED(cls):
                return cls("SIGN_REQUEST.COMPLETED")
            
            @schemas.classproperty
            def SIGN_REQUEST_DECLINED(cls):
                return cls("SIGN_REQUEST.DECLINED")
            
            @schemas.classproperty
            def SIGN_REQUEST_EXPIRED(cls):
                return cls("SIGN_REQUEST.EXPIRED")
            
            @schemas.classproperty
            def SIGN_REQUEST_SIGNER_EMAIL_BOUNCED(cls):
                return cls("SIGN_REQUEST.SIGNER_EMAIL_BOUNCED")

    def __new__(
        cls,
        arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'WebhooksUpdateWebhookRequestTriggers':
        return super().__new__(
            cls,
            arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
